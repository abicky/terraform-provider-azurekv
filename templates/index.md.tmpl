---
# The default template is https://github.com/hashicorp/terraform-plugin-docs/blob/v0.22.0/internal/provider/template.go#L382
# This markdown file is generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "{{.RenderedProviderName}} Provider"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.RenderedProviderName}} Provider

{{ .Description }}

Even if you use [`ignore_changes`](https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#ignore_changes) to avoid wtoring secret values directly in Terraform files, the actual secret values are still written to the state file. Write-only arguments were introduced to solve this problem. However, the [`azurerm_key_vault_secret`](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret) resource still requires the `Microsoft.KeyVault/vaults/secrets/getSecret/action` permission even if you use write-only arguments. This means you must grant that permission to anyone who runs `terraform plan`.
This provider addresses that limitation.

~> Once [hashicorp/terraform-provider-azurerm#29637](https://github.com/hashicorp/terraform-provider-azurerm/pull/29637), which provides the same functionality, is merged, this provider will no longer be developed.


## Example Usage

### Manage secret values outside of Terraform

If you mange secret values outside of Terraform, just set a placeholder to `value_wo`:

{{tffile .ExampleFile }}


### Manage secret values with ephemeral variables

With an ephemeral variable, you can manage a secret value securely:

{{tffile "examples/provider/provider-with-ephemeral-variable.tf" }}

Since the ephemeral variable is not stored in the plan file, you need to set the variable when running both `terraform plan` and `terraform apply`:

```
export TF_VAR_secret_value=...
terraform apply tfplan
```

When you update the secret value, increment the `value_wo_version`.


### Manage secret values with sensitive variables

If storing a secret value in the plan file is acceptable, you can use a sensitive variable:

{{tffile "examples/provider/provider-with-ephemeral-variable.tf" }}

In this case, you don't need to set the variable when running `terraform apply`.

When you update the secret value, increment the `value_wo_version`.

{{ .SchemaMarkdown | trimspace }}

## Authentication

Since this provider uses the [DefaultAzureCredential](https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/azidentity#DefaultAzureCredential) for authorization, see its documentation for details.

For example, if you use a service principal using its client secret, set the following environment variables:

* AZURE_CLIENT_ID
* AZURE_CLIENT_SECRET
* AZURE_TENANT_ID

### Required permissions

#### For terraform plan

* Actions
    - Microsoft.KeyVault/vaults/read (For import)
* DataActions
    - Microsoft.KeyVault/vaults/secrets/readMetadata/action

#### For terraform apply

* Actions
    - Microsoft.KeyVault/vaults/read (For import)
* DataActions
    - Microsoft.KeyVault/vaults/secrets/delete
    - Microsoft.KeyVault/vaults/secrets/readMetadata/action
    - Microsoft.KeyVault/vaults/secrets/setSecret/action
